name: Deploy Lambda

on:
  push:
    paths:
      - 'Flask_backend/aws_lambda/**'

jobs:
  

  update_integration:
    runs-on: ubuntu-latest

    env:
      REGION: ap-northeast-2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Get Route ID
        id: get-route
        run: |
          ROUTE_ID=$(aws apigatewayv2 get-routes --api-id ${{  secrets.API_ID  }} --query "Items[?RouteKey=='${{  secrets.ROUTE_KEY  }}'].RouteId" --output text)
          if [ -z "$ROUTE_ID" ]; then
            echo "Route not found."
            exit 1
          else
            echo "Route found."
            echo 'ROUTE_ID=$ROUTE_ID' >> $GITHUB_ENV
            echo "${{  env.ROUTE_ID  }}"
          fi

      - name: Get existing integration ID
        run: |
          INTEGRATION_ID=$(aws apigatewayv2 get-integrations --api-id ${{  secrets.API_ID  }} --query "Items[?IntegrationType=='AWS_PROXY'].IntegrationId" --output text)
          if [ -z "$INTEGRATION_ID" ]; then
            echo "No existing integration found. Creating a new integration."
          else
            echo "Removing existing integration from route."
            aws apigatewayv2 delete-route --api-id ${{  secrets.API_ID  }} --route-id ${{ env.ROUTE_ID }}
            
            echo "Deleting existing integration."
            aws apigatewayv2 delete-integration --api-id ${{  secrets.API_ID  }} --integration-id $INTEGRATION_ID
            fi

      - name: Create new integration
        id: get-integration
        run: |
          NEW_INTEGRATION_ID=$(aws apigatewayv2 create-integration --api-id ${{  secrets.API_ID  }} --integration-type AWS_PROXY --integration-uri ${{  secrets.LAMBDA_ARN  }} --payload-format-version 2.0 --query "IntegrationId" --output text)
          echo 'INTEGRATION_ID=$NEW_INTEGRATION_ID' >> $GITHUB_ENV
          
      - name: Set new integration to route
        run: |
          aws apigatewayv2 create-route --api-id ${{  secrets.API_ID  }} --route-key "${{  secrets.ROUTE_KEY  }}" --target integrations/${{ env.INTEGRATION_ID }}

      - name: Add permission to Lambda function
        run: |
          aws lambda add-permission --function-name perst1 --statement-id ${{  secrets.STATEMENT_ID  }} --action lambda:InvokeFunction --principal apigateway.amazonaws.com --source-arn "${{  secrets.SOURCE_ARN  }}"

      - name: Process completed
        run: echo "Process completed."